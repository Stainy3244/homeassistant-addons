name: Builder for Home Assistant Dispatcharr addon

env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.yaml Dockerfile run.sh"

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Tagged release: $VERSION"
          else
            VERSION=$(grep 'version:' config.yaml | sed 's/version: *"\(.*\)"/\1/')
            echo "version=$VERSION" >> $GITHUB_OUTPUT  
            echo "Config version: $VERSION"
          fi

      - name: Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: Find add-on directories
        id: changed_addons
        run: |
          declare -a changed_addons
          for file in ${{ steps.changed_files.outputs.all }}; do
            if [[ $file =~ $MONITORED_FILES ]]; then
              addon=$(echo $file | cut -d/ -f1)
              if [[ -d "${addon}" ]] || [[ "$addon" == "dispatcharr" ]] || [[ -f "config.yaml" ]]; then
                changed_addons=("${changed_addons[@]}" "dispatcharr")
              fi
            fi
          done
          
          # Always build on tag pushes
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            changed_addons=("dispatcharr")
          fi
          
          changed=$(printf "%s\n" "${changed_addons[@]}" | sort -u | tr '\n' ' ')
          
          if [[ ${#changed_addons[@]} -gt 0 ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT;
            echo "addons=[\"dispatcharr\"]" >> $GITHUB_OUTPUT;
          else
            echo "No add-on files changed"
            echo "changed=false" >> $GITHUB_OUTPUT;
          fi

  version-bump:
    runs-on: ubuntu-latest
    name: Auto version bump
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'bump:')
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
      version_bumped: ${{ steps.bump.outputs.version_bumped }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current
        run: |
          CURRENT_VERSION=$(grep 'version:' config.yaml | sed 's/version: *"\(.*\)"/\1/')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Determine version bump type
        id: bump_type
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if [[ "$COMMIT_MSG" =~ feat(\(.+\))?!:|BREAKING[[:space:]]CHANGE ]]; then
            echo "bump_type=major" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" =~ feat(\(.+\))?: ]]; then
            echo "bump_type=minor" >> $GITHUB_OUTPUT  
          else
            echo "bump_type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: bump
        run: |
          CURRENT="${{ steps.current.outputs.current_version }}"
          BUMP_TYPE="${{ steps.bump_type.outputs.bump_type }}"
          
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}  
          PATCH=${VERSION_PARTS[2]}
          
          case $BUMP_TYPE in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version_bumped=true" >> $GITHUB_OUTPUT
          echo "Bumped version from $CURRENT to $NEW_VERSION (type: $BUMP_TYPE)"
          
          # Update config.yaml
          sed -i "s/version: \"$CURRENT\"/version: \"$NEW_VERSION\"/" config.yaml
          
          # Commit and push
          git add config.yaml
          git commit -m "bump: version $CURRENT â†’ $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push
          git push --tags

  build:
    needs: [init, version-bump]
    runs-on: ubuntu-latest
    if: always() && (needs.init.outputs.changed == 'true' || needs.version-bump.outputs.version_bumped == 'true')
    name: Build ${{ matrix.addon }} (${{ matrix.arch }})
    strategy:
      matrix:
        addon: ["dispatcharr"]
        arch: ["aarch64", "amd64", "armv7"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "."

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }}
        uses: home-assistant/builder@2024.03.5
        env:
          BUILD_ARGS: ${{ github.event_name == 'pull_request' && '--test' || '' }}
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target . \
            --image "ghcr.io/${{ github.repository_owner }}/addon-dispatcharr-${{ matrix.arch }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
